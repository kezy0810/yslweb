<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${tfcc.jdbc.url}" />
		<property name="username" value="${tfcc.jdbc.username}" />
		<property name="password" value="${tfcc.jdbc.password}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="600000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="6000000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="wall,stat" />
	</bean>
	<bean name="dataSource2" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${tfcc.jdbc.url}" />
		<property name="username" value="${tfcc.jdbc.username}" />
		<property name="password" value="${tfcc.jdbc.password}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="60000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="wall,stat" />
	</bean>

	

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mapperLocations" value="classpath:sysmybatis/*Mapper.xml" 
			/> -->
		<property name="configLocation" value="classpath:tfcc-mybatis-config.xml" />
	</bean>
	
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<property name="configLocation" value="classpath:tfcc-mybatis-config.xml" />
	</bean>

	<!-- bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean--> 

   <bean id="sqlSessionTemplate" class="com.qkl.tfcc.provider.dbhelper.DaoSupport" abstract="true" lazy-init="true">
        <property name="targetSqlSessionFactorys">
            <map>     
                <entry value-ref="sqlSessionFactory" key="sqlSessionFactory"/>
                <entry value-ref="sqlSessionFactory2" key="sqlSessionFactory2"/>
            </map> 
        </property>
        <property name="defaultTargetSqlSessionFactory" ref="sqlSessionFactory" />
	</bean>



	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.qkl.tfcc.provider.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager2"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource2" />
	</bean>

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice2" transaction-manager="transactionManager2">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut2"
			expression="execution(* com.qkl.tfcc.provider..*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut2"
			advice-ref="transactionAdvice2" />
	</aop:config>
	
	
	<!-- 配置druid监控spring jdbc -->
	<!-- bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.qkl.tfcc.api.*</value>
			</list>

		</property>
	</bean>	
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	 -->
	 
	 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.qkl.tfcc.provider.*.impl" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.qkl.tfcc.provider.*.impl" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>
	
	 
	 
	<bean id = "jdbcTemplate"    
         class = "org.springframework.jdbc.core.JdbcTemplate">    
         <property name = "dataSource" ref="dataSource"/>    
    </bean>
    
    <bean id = "jdbcTemplate2"    
         class = "org.springframework.jdbc.core.JdbcTemplate">    
         <property name = "dataSource" ref="dataSource2"/>    
    </bean>
	
</beans>  